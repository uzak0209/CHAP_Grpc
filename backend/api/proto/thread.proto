syntax = "proto3";
package chap.thread.v1;
option go_package = "github.com/uzak0209/CHAP_Grpc/backend/api/pd;pd";

import "common.proto";
import "comment.proto";
import "google/api/annotations.proto";

service ThreadService {
  // スレッド操作
  rpc GetThreadsByID(GetThreadByIDRequest) returns (GetThreadByIDResponse) {
    option (google.api.http) = {
      get: "/api/v1/threads/{thread_id}"
    };
  }
  rpc GetThreads(GetThreadsRequest) returns (GetThreadsResponse) {
    option (google.api.http) = {
      get: "/api/v1/threads"
    };
  }
  rpc CreateThread(CreateThreadRequest) returns (chap.common.v1.StandardResponse) {
    option (google.api.http) = {
      post: "/api/v1/threads/create"
      body: "*"
    };
  }
  rpc EditThread(EditThreadRequest) returns (chap.common.v1.StandardResponse) {
    option (google.api.http) = {
      put: "/api/v1/threads/edit"
      body: "*"
    };
  }
  rpc DeleteThread(DeleteThreadRequest) returns (chap.common.v1.StandardResponse) {
    option (google.api.http) = {
      delete: "/api/v1/threads/delete/{thread_id}"
    };
  }
}

message GetThreadByIDRequest {
  string thread_id = 1;
}

message GetThreadByIDResponse {
  Thread thread = 1;
  repeated chap.comment.v1.Comment comment = 2;
}

message Thread{
    string id =1;
    string user_name =2;
    string user_id =3;
    string user_image =4;
    string content =5;
    string image=6;
    int32 like_count =7;
    string created_at =8;
    string updated_at =9;
    double lat =10;
    double lng =11;
    repeated string likes=12;
    repeated string comments=13;
    string content_type =14;
}

message GetThreadsRequest {
  double lat = 1;
  double lng = 2;
}

message GetThreadsResponse {
  repeated Thread threads = 1;
}

message CreateThreadRequest{
    string content =1;
    string image=2;
    double lat =3;
    double lng =4;
    string content_type =5;
}

message EditThreadRequest {
  string thread_id = 1;
  string content = 2;
  string image=3;
}

message DeleteThreadRequest {
  string thread_id = 1;
}