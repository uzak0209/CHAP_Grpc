syntax = "proto3";
package chap.user.v1;
option go_package = "github.com/uzak0209/CHAP_Grpc/backend/api/pd;pd";

import "common.proto";
import "google/api/annotations.proto";

service UserService {
  // ユーザー操作
  rpc GetMe(chap.common.v1.Empty) returns (GetUserByIDResponse) {
    option (google.api.http) = {
      get: "/api/v1/users/me"
    };
  }
  rpc GetUserByID(GetUserByIDRequest) returns (GetUserByIDResponse) {
    option (google.api.http) = {
      get: "/api/v1/users/{user_id}"
    };
  }
  rpc EditUser(EditUserRequest) returns (chap.common.v1.StandardResponse) {
    option (google.api.http) = {
      put: "/api/v1/users/edit"
      body: "*"
    };
  }
  rpc DeleteUser(DeleteUserRequest) returns (chap.common.v1.StandardResponse) {
    option (google.api.http) = {
      delete: "/api/v1/users/delete/{user_id}"
    };
  }
  rpc FollowUser(FollowUserRequest) returns (chap.common.v1.StandardResponse) {
    option (google.api.http) = {
      post: "/api/v1/users/{target_user_id}/follow"
      body: "*"
    };
  }
  rpc UnfollowUser(UnfollowUserRequest) returns (chap.common.v1.StandardResponse) {
    option (google.api.http) = {
      delete: "/api/v1/users/{target_user_id}/follow"
    };
  }
}

message User{
    string id =1;
    string name =2;
    string description =3;
    string image =4;
    string created_at =6;
    string updated_at =7;
    int32 follower_count =8;
    int32 following_count =9;
    repeated string followers=10;
    repeated string followings=11;
}

message GetUserByIDRequest {
  string user_id = 1;
}

message GetUserByIDResponse {
  User user = 1;
}

message EditUserRequest {
  string user_id = 1;
  string name = 2;
  string description = 3;
  string image = 4;
}

message DeleteUserRequest {
  string user_id = 1;
}

message FollowUserRequest {
  string target_user_id = 2;
}

message UnfollowUserRequest {
  string target_user_id = 2;
}