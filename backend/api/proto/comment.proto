syntax = "proto3";

package chap.comment.v1;

option go_package = "github.com/uzak0209/CHAP_Grpc/backend/api/pd;pd";

import "common.proto";
import "google/api/annotations.proto";

service CommentService {
  // コメント操作
  rpc GetCommentsByThreadID(GetCommentsByThreadIDRequest) returns (GetCommentsByThreadIDResponse) {
    option (google.api.http) = {
      get: "/api/v1/threads/{thread_id}/comments"
    };
  }
  rpc CreateComment(CreateCommentRequest) returns (chap.common.v1.StandardResponse) {
    option (google.api.http) = {
      post: "/api/v1/threads/{thread_id}/comments"
      body: "*"
    };
  }
  rpc EditComment(EditCommentRequest) returns (chap.common.v1.StandardResponse) {
    option (google.api.http) = {
      put: "/api/v1/comments/{comment_id}"
      body: "*"
    };
  }
  rpc DeleteComment(DeleteCommentRequest) returns (chap.common.v1.StandardResponse) {
    option (google.api.http) = {
      delete: "/api/v1/comments/{comment_id}"
    };
  }
}

message Comment{
  string id =1;
  string thread_id =2;
  string user_name =3;
  string user_id =4;
  string user_image =5;
  string content =6;
  string image=7;
  string parent_comment_id =8;
  int32 like_count =9;
  string created_at =10;
  string updated_at =11;
  double lat =12;
  double lng =13;
  repeated string likes=14;
}

message GetCommentsByThreadIDRequest {
  string thread_id = 1;
  double lat = 2;
  double lng = 3;
}

message GetCommentsByThreadIDResponse {
  repeated Comment comments = 1;
}

message CreateCommentRequest{
  string thread_id =1;
  string content =2;
}

message EditCommentRequest {
  string comment_id = 1;
  string content = 2;
}

message DeleteCommentRequest {
  string comment_id = 1;
}