// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: event.proto

package pd

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetEventByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventByIDRequest) Reset() {
	*x = GetEventByIDRequest{}
	mi := &file_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventByIDRequest) ProtoMessage() {}

func (x *GetEventByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventByIDRequest.ProtoReflect.Descriptor instead.
func (*GetEventByIDRequest) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{0}
}

func (x *GetEventByIDRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

type GetEventByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *Event                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Comment       []*Comment             `protobuf:"bytes,2,rep,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventByIDResponse) Reset() {
	*x = GetEventByIDResponse{}
	mi := &file_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventByIDResponse) ProtoMessage() {}

func (x *GetEventByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventByIDResponse.ProtoReflect.Descriptor instead.
func (*GetEventByIDResponse) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{1}
}

func (x *GetEventByIDResponse) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *GetEventByIDResponse) GetComment() []*Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserName      string                 `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserImage     string                 `protobuf:"bytes,4,opt,name=user_image,json=userImage,proto3" json:"user_image,omitempty"`
	Content       string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Image         string                 `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	LikeCount     int32                  `protobuf:"varint,7,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Lat           float64                `protobuf:"fixed64,10,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng           float64                `protobuf:"fixed64,11,opt,name=lng,proto3" json:"lng,omitempty"`
	Likes         []string               `protobuf:"bytes,12,rep,name=likes,proto3" json:"likes,omitempty"`
	EventDate     string                 `protobuf:"bytes,13,opt,name=event_date,json=eventDate,proto3" json:"event_date,omitempty"`
	ContentType   string                 `protobuf:"bytes,14,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{2}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Event) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Event) GetUserImage() string {
	if x != nil {
		return x.UserImage
	}
	return ""
}

func (x *Event) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Event) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Event) GetLikeCount() int32 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *Event) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Event) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Event) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *Event) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *Event) GetLikes() []string {
	if x != nil {
		return x.Likes
	}
	return nil
}

func (x *Event) GetEventDate() string {
	if x != nil {
		return x.EventDate
	}
	return ""
}

func (x *Event) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

type GetEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lat           float64                `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng           float64                `protobuf:"fixed64,2,opt,name=lng,proto3" json:"lng,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsRequest) Reset() {
	*x = GetEventsRequest{}
	mi := &file_event_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsRequest) ProtoMessage() {}

func (x *GetEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsRequest.ProtoReflect.Descriptor instead.
func (*GetEventsRequest) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{3}
}

func (x *GetEventsRequest) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *GetEventsRequest) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

type GetEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*Event               `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsResponse) Reset() {
	*x = GetEventsResponse{}
	mi := &file_event_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsResponse) ProtoMessage() {}

func (x *GetEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsResponse.ProtoReflect.Descriptor instead.
func (*GetEventsResponse) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{4}
}

func (x *GetEventsResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type CreateEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Image         string                 `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Lat           float64                `protobuf:"fixed64,3,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng           float64                `protobuf:"fixed64,4,opt,name=lng,proto3" json:"lng,omitempty"`
	EventDate     string                 `protobuf:"bytes,5,opt,name=event_date,json=eventDate,proto3" json:"event_date,omitempty"`
	ContentType   string                 `protobuf:"bytes,6,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEventRequest) Reset() {
	*x = CreateEventRequest{}
	mi := &file_event_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventRequest) ProtoMessage() {}

func (x *CreateEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventRequest.ProtoReflect.Descriptor instead.
func (*CreateEventRequest) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{5}
}

func (x *CreateEventRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateEventRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CreateEventRequest) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *CreateEventRequest) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *CreateEventRequest) GetEventDate() string {
	if x != nil {
		return x.EventDate
	}
	return ""
}

func (x *CreateEventRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

type EditEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	EventDate     string                 `protobuf:"bytes,2,opt,name=event_date,json=eventDate,proto3" json:"event_date,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Image         string                 `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditEventRequest) Reset() {
	*x = EditEventRequest{}
	mi := &file_event_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditEventRequest) ProtoMessage() {}

func (x *EditEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditEventRequest.ProtoReflect.Descriptor instead.
func (*EditEventRequest) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{6}
}

func (x *EditEventRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *EditEventRequest) GetEventDate() string {
	if x != nil {
		return x.EventDate
	}
	return ""
}

func (x *EditEventRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *EditEventRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type DeleteEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEventRequest) Reset() {
	*x = DeleteEventRequest{}
	mi := &file_event_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEventRequest) ProtoMessage() {}

func (x *DeleteEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEventRequest.ProtoReflect.Descriptor instead.
func (*DeleteEventRequest) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteEventRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

var File_event_proto protoreflect.FileDescriptor

const file_event_proto_rawDesc = "" +
	"\n" +
	"\vevent.proto\x12\rchap.event.v1\x1a\fcommon.proto\x1a\rcomment.proto\x1a\x1cgoogle/api/annotations.proto\"0\n" +
	"\x13GetEventByIDRequest\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\"v\n" +
	"\x14GetEventByIDResponse\x12*\n" +
	"\x05event\x18\x01 \x01(\v2\x14.chap.event.v1.EventR\x05event\x122\n" +
	"\acomment\x18\x02 \x03(\v2\x18.chap.comment.v1.CommentR\acomment\"\xf5\x02\n" +
	"\x05Event\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tuser_name\x18\x02 \x01(\tR\buserName\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"user_image\x18\x04 \x01(\tR\tuserImage\x12\x18\n" +
	"\acontent\x18\x05 \x01(\tR\acontent\x12\x14\n" +
	"\x05image\x18\x06 \x01(\tR\x05image\x12\x1d\n" +
	"\n" +
	"like_count\x18\a \x01(\x05R\tlikeCount\x12\x1d\n" +
	"\n" +
	"created_at\x18\b \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\t \x01(\tR\tupdatedAt\x12\x10\n" +
	"\x03lat\x18\n" +
	" \x01(\x01R\x03lat\x12\x10\n" +
	"\x03lng\x18\v \x01(\x01R\x03lng\x12\x14\n" +
	"\x05likes\x18\f \x03(\tR\x05likes\x12\x1d\n" +
	"\n" +
	"event_date\x18\r \x01(\tR\teventDate\x12!\n" +
	"\fcontent_type\x18\x0e \x01(\tR\vcontentType\"6\n" +
	"\x10GetEventsRequest\x12\x10\n" +
	"\x03lat\x18\x01 \x01(\x01R\x03lat\x12\x10\n" +
	"\x03lng\x18\x02 \x01(\x01R\x03lng\"A\n" +
	"\x11GetEventsResponse\x12,\n" +
	"\x06events\x18\x01 \x03(\v2\x14.chap.event.v1.EventR\x06events\"\xaa\x01\n" +
	"\x12CreateEventRequest\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\x12\x14\n" +
	"\x05image\x18\x02 \x01(\tR\x05image\x12\x10\n" +
	"\x03lat\x18\x03 \x01(\x01R\x03lat\x12\x10\n" +
	"\x03lng\x18\x04 \x01(\x01R\x03lng\x12\x1d\n" +
	"\n" +
	"event_date\x18\x05 \x01(\tR\teventDate\x12!\n" +
	"\fcontent_type\x18\x06 \x01(\tR\vcontentType\"|\n" +
	"\x10EditEventRequest\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x1d\n" +
	"\n" +
	"event_date\x18\x02 \x01(\tR\teventDate\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x14\n" +
	"\x05image\x18\x04 \x01(\tR\x05image\"/\n" +
	"\x12DeleteEventRequest\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId2\xd9\x04\n" +
	"\fEventService\x12z\n" +
	"\fGetEventByID\x12\".chap.event.v1.GetEventByIDRequest\x1a#.chap.event.v1.GetEventByIDResponse\"!\x82\xd3\xe4\x93\x02\x1b\x12\x19/api/v1/events/{event_id}\x12i\n" +
	"\tGetEvents\x12\x1f.chap.event.v1.GetEventsRequest\x1a .chap.event.v1.GetEventsResponse\"\x19\x82\xd3\xe4\x93\x02\x13:\x01*\"\x0e/api/v1/events\x12t\n" +
	"\vCreateEvent\x12!.chap.event.v1.CreateEventRequest\x1a .chap.common.v1.StandardResponse\" \x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/api/v1/events/create\x12n\n" +
	"\tEditEvent\x12\x1f.chap.event.v1.EditEventRequest\x1a .chap.common.v1.StandardResponse\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\x1a\x13/api/v1/events/edit\x12|\n" +
	"\vDeleteEvent\x12!.chap.event.v1.DeleteEventRequest\x1a .chap.common.v1.StandardResponse\"(\x82\xd3\xe4\x93\x02\"* /api/v1/events/delete/{event_id}B1Z/github.com/uzak0209/CHAP_Grpc/backend/api/pd;pdb\x06proto3"

var (
	file_event_proto_rawDescOnce sync.Once
	file_event_proto_rawDescData []byte
)

func file_event_proto_rawDescGZIP() []byte {
	file_event_proto_rawDescOnce.Do(func() {
		file_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_event_proto_rawDesc), len(file_event_proto_rawDesc)))
	})
	return file_event_proto_rawDescData
}

var file_event_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_event_proto_goTypes = []any{
	(*GetEventByIDRequest)(nil),  // 0: chap.event.v1.GetEventByIDRequest
	(*GetEventByIDResponse)(nil), // 1: chap.event.v1.GetEventByIDResponse
	(*Event)(nil),                // 2: chap.event.v1.Event
	(*GetEventsRequest)(nil),     // 3: chap.event.v1.GetEventsRequest
	(*GetEventsResponse)(nil),    // 4: chap.event.v1.GetEventsResponse
	(*CreateEventRequest)(nil),   // 5: chap.event.v1.CreateEventRequest
	(*EditEventRequest)(nil),     // 6: chap.event.v1.EditEventRequest
	(*DeleteEventRequest)(nil),   // 7: chap.event.v1.DeleteEventRequest
	(*Comment)(nil),              // 8: chap.comment.v1.Comment
	(*StandardResponse)(nil),     // 9: chap.common.v1.StandardResponse
}
var file_event_proto_depIdxs = []int32{
	2, // 0: chap.event.v1.GetEventByIDResponse.event:type_name -> chap.event.v1.Event
	8, // 1: chap.event.v1.GetEventByIDResponse.comment:type_name -> chap.comment.v1.Comment
	2, // 2: chap.event.v1.GetEventsResponse.events:type_name -> chap.event.v1.Event
	0, // 3: chap.event.v1.EventService.GetEventByID:input_type -> chap.event.v1.GetEventByIDRequest
	3, // 4: chap.event.v1.EventService.GetEvents:input_type -> chap.event.v1.GetEventsRequest
	5, // 5: chap.event.v1.EventService.CreateEvent:input_type -> chap.event.v1.CreateEventRequest
	6, // 6: chap.event.v1.EventService.EditEvent:input_type -> chap.event.v1.EditEventRequest
	7, // 7: chap.event.v1.EventService.DeleteEvent:input_type -> chap.event.v1.DeleteEventRequest
	1, // 8: chap.event.v1.EventService.GetEventByID:output_type -> chap.event.v1.GetEventByIDResponse
	4, // 9: chap.event.v1.EventService.GetEvents:output_type -> chap.event.v1.GetEventsResponse
	9, // 10: chap.event.v1.EventService.CreateEvent:output_type -> chap.common.v1.StandardResponse
	9, // 11: chap.event.v1.EventService.EditEvent:output_type -> chap.common.v1.StandardResponse
	9, // 12: chap.event.v1.EventService.DeleteEvent:output_type -> chap.common.v1.StandardResponse
	8, // [8:13] is the sub-list for method output_type
	3, // [3:8] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_event_proto_init() }
func file_event_proto_init() {
	if File_event_proto != nil {
		return
	}
	file_common_proto_init()
	file_comment_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_event_proto_rawDesc), len(file_event_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_event_proto_goTypes,
		DependencyIndexes: file_event_proto_depIdxs,
		MessageInfos:      file_event_proto_msgTypes,
	}.Build()
	File_event_proto = out.File
	file_event_proto_goTypes = nil
	file_event_proto_depIdxs = nil
}
