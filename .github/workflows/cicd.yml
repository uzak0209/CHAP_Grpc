name: Deploy via SSM
on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache built binary
        uses: actions/cache@v4
        with:
          path: backend/app
          key: ${{ runner.os }}-binary-${{ hashFiles('backend/main.go') }}

      - name: Build binary
        run: |
          cd backend
          if [ ! -f app ]; then
            GOOS=linux GOARCH=amd64 go build -o app main.go
          else
            echo "Using cached binary"
          fi
      - name: Upload app to S3
        run: |
          aws s3 cp ./backend/app s3://chapexec/app

      - name: Deploy to EC2 via SSM
        run: |
          aws ssm send-command \
            --region ap-northeast-1 \
            --instance-ids i-0852a3729fc7699a4 \
            --document-name "AWS-RunShellScript" \
            --comment "Download app from S3" \
            --parameters commands='[
              "mkdir -p /opt/app",
              "cd /opt/app",
              "rm -f app",
              "aws s3 cp s3://chapexec/app ./app",
              "chmod +x app",
              "nohup ./app > app.log 2>&1 &"
            ]'