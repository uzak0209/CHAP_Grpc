name: Deploy via SSM
on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.docker-cache
          key: ${{ runner.os }}-docker-amazonlinux2
      - name: Load Docker cache
        run: |
          mkdir -p /tmp/.docker-cache
          docker load -i /tmp/.docker-cache/image.tar || true

      - name: Build binary for Amazon Linux 2
        run: |
          docker pull amazonlinux:2
          docker save amazonlinux:2 -o /tmp/.docker-cache/image.tar
          docker run --rm -v $PWD:/app -w /app/backend amazonlinux:2 bash -c "
            yum install -y golang && \
            go version && \
            go mod tidy && \
            GOOS=linux GOARCH=amd64 go build -o app main.go
          "
          ls -lh backend/app

      - name: Upload app to S3
        run: |
          aws s3 cp ./backend/app s3://chapexec/app

      - name: Deploy to EC2 via SSM
        run: |
          aws ssm send-command \
            --region ap-northeast-1 \
            --instance-ids i-0852a3729fc7699a4 \
            --document-name "AWS-RunShellScript" \
            --comment "Download app from S3 and restart" \
            --parameters commands='[
              "mkdir -p /opt/app",
              "cd /opt/app",
              "aws s3 cp s3://chapexec/app ./app.new",
              "if [ -s app.new ]; then",
              "  echo \"Stopping existing app...\";",
              "  pkill -f app || true;",
              "  mv -f app.new app;",
              "  chmod +x app;",
              "  echo \"Starting new app...\";",
              "  sudo -u ec2-user bash -c '\''cd /opt/app && setsid ./app > app.log 2>&1 < /dev/null &'\'",
              "else",
              "  echo \"Download failed\" > error.log;",
              "fi"
              ]'